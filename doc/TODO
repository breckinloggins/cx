[X] Type in toypasc compiler example
[X] Change up a few tokens like Begin and End to make it more C-like
[X] Add command line options
[X]	Add pass-through compilation
[X]	Change grammar to put parenthesis around things that require parenthesis in C
[X]	BUG: variables aren't recognized as their types
[X]	Modify Var declaration to be C-like instead of pascal-like
[X]	Rename ProgramDecl to NamespaceDecl
[X]	Add // style comment
[X]	Rename Program rule to TranslationUnit
[X] BUG: only one variable gets translated in the vardecl_list
[X]	Add float and double types
[X]	BUG: last statement can't have a semicolon
[X]	Remove distinction between procedures and functions
[X]	BUG: compiler doesn't actually return the right value from a function
[X] Add return statement
[X]	BUG: functions cannot be called
[X]	Move to C-style function declaration syntax
[X]	Add a readChar() statement to make things more interesting
[X]	Remove ProgramBody element.  Programs will need to explicitly declare a main function
[X]	First pass for dropping to other languages with a _<language>_ {} syntax.  Start with _C_ { fprintf("hi!"); } and
	directly output with the code generator
[X]	Create GitHub repository
[X]	Collect all the feature specs from various sources, clean up, put in FEATURES document
[X]	Test and fix issues with if statments
	[X] BUG: if statement doesn't allow blocks
	[X] BUG: Grammar has insane complexity on if/then statements
[X]	BUG: statements are inserted into the AST backward
[X]	Allow declaration of vars inside a statement block
[X]	Allow declarations and statements to be intermingled
[X]	Better handling of semicolons in generated C-code
[X]	BUG: readChar() should be an expression, not a statement
[X]	Allow void functions
[X]	Don't allow void variables
[X]	BUG: Functions are allowed to not have the right return type as the last statement
[X]	BUG: Graph visitor complains about invalid return statements
[X]	Rename base types to C-type names
[X]	Add Flex/Bison support to CMake file
[X]	Rename symbol_table.h to Identifier Table and add more attributes to make code gen easier
[X]	When generating C code, append namespace to variables and functions
[X]	BUG: NOT operator doesn't work
[X]	BUG: function parameters aren't supported and are still Pascal syntax
[X]	Add proper tabbing when generating C Code
[X]	Allow variable and function declarations in any order inside namespaces
[X]	BUG: access modifiers on function declarations should be optional
[X]	Remove temporary "fn" modifier
[X]	Fix memory leaks
[X]	Implement chained identifier tables
[X]	Add AST codenode_helper module for AST helper functions
[X]	BUG: Graphprinter crashes with new type system
[X] Replace hardcoded function information in the identifier table with a reference to the declaration node
[X]	Allow translation units to have multiple namespaces
[X]	Add do/while
[X]	Test (and fix) dangling else
[X]	Allow C Block to live outside of namespace declarations (for header files, macros, etc)
[]	BUG: For loop behavior is hard coded and stupid
[]	Add support for compound statements, support them in for loops
[]	Test all control and loop structures
[]	Add code for standard environment
[]	BUG: Cleanup partially constructed AST when program exits due to syntax error
[]	Add Ast Node Types for types and type declarations
[]	Add a "declaration node" to the identifier table in place of the ad-hoc stuff in there now
[]	Add array type
[]	Add string type/string literals
[]	Add using declaration, initial lookup logic
[]	Refactor variable declaration syntax and add support for assignments on the same line
[]	Add hexadecimal and octal literals
[]	Add bitwise operators
[]	Add ternary operator
[]	Add break/continue statements
[]	Add switch statement
[]	Add goto/labels
[]	Add support for IEEE floating point notation (e notation)
[]  Add support for symbols (: syntax)
[]	Add support for named parameters (parameterName = value syntax)
[]	Add struct type
[]	Add class type
[]	Add enum type
[]	Add foreach
[]	Show chained scope tables in the graph
[]	Replace built in I/O statements with a standard environment
[]	Add more test files and create a testing framework with CMake/CTest
[]	Add /// comment that clings to closest program unit
[]	Define standard ABI, C-macros, etc.
[]	Define way to expose a C function interface manually.
		// Define C convenience function
		"C" string accessFoo()	{ // Do some Cx stuff here.  C caller will see the return as an ARRAY struct }
[]	Rewrite README to be more public-oriented
[]	Output #line info so that GDB can debug our programs
[]	Get Cx compiling under Windows
[]  Add feature where type of last expression in function will be the return value of
	that function (??)
[]	Parse the input file name to create good output intermediate and executable names